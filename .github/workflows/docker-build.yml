name: build-documents

on:
  push:
    branches: [ master, main ]
  pull_request:

jobs:
  build-docker:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/metanorma/metanorma-nist:latest
      credentials:
        username: metanorma-ci
        password: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: /config/fonts
          key: metanorma-nist-fonts
          restore-keys: metanorma-nist-fonts

      - name: Cache built documents
        uses: actions/cache@v2
        with:
          path: site/
          key: ${{ hashFiles('metanorma.yml') }}-${{ hashFiles('src/*.adoc') }}

      - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@main
        with:
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}

      - uses: metanorma/metanorma-build-scripts/docker-gem-install@main

      - uses: actions-mn/cli/site-gen@main
        with:
          agree-to-terms: true

      - name: Build NIST site on GitHub Pages
        run: |
          rm -f site/index.html
          find site/documents/src \( -name '*.html' -or -name '*.pdf' -or \
            -name '*.rxl' -or -name '*.xml' \) -exec mv \{} site/ \;
          rm -rf site/documents
          cp _config.yml site/
          cp -a _includes site/
          cp README.md site/index.md

      - uses: actions/upload-artifact@v2
        with:
          name: site
          path: site

  deploy-gh-pages:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: site

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: ./site
          publish_branch: nist-pages
          force_orphan: true
          enable_jekyll: true
          user_name: ${{ github.actor }}
          user_email: ${{ format('{0}@users.noreply.github.com', github.actor) }}
          commit_message: "${{ format('Deploy to GitHub Pages: {0}', github.sha) }}"

      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 0
